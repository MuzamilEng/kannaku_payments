name: Build, push, and deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
        - main

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16.x'

    - uses: actions/checkout@v2
      with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    - uses: sonarsource/sonarqube-scan-action@master
      env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
    - name: make env
      run:  touch .env
    - name: add secrets
      run: |
          cat << EOF > .env
          MONGO_URL = ${{secrets.MONGO_URL }}

    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    - name: Build container image
      run: docker build -t ${{ secrets.REGISTRY_NAME }}/customer-service:$(echo $GITHUB_SHA | head -c7) .

    - name: Log in to DigitalOcean Container Registry with short-lived credentials
      run: doctl registry login --expiry-seconds 1200

    - name: Push image to DigitalOcean Container Registry
      run: docker push ${{ secrets.REGISTRY_NAME }}/customer-service:$(echo $GITHUB_SHA | head -c7)
    - name: Update deployment file
      run: TAG=$(echo $GITHUB_SHA | head -c7) && sed -i 's|<IMAGE>|${{ secrets.REGISTRY_NAME }}/customer-service:'${TAG}'|' k8s/manifest.yml
    - name: Save DigitalOcean kubeconfig with short-lived credentials
      run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.CLUSTER_NAME }}

    - name: Deploy to DigitalOcean Kubernetes
      run: kubectl apply -f k8s/manifest.yml

    - name: Verify deployment
      run: kubectl rollout status deployment/customer

    - name: Remove old images from Container Registry
      uses: ripplr-io/docr-image-remove@v1
      with:
        image_repository: ${{ secrets.REGISTRY_NAME }}/customer-service
        buffer_size: 2
